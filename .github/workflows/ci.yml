name: CI

on:
  push:

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: jdx/mise-action@v2
        with:
          install: true

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Run pre-commit hooks
        id: pre-commit
        continue-on-error: true
        run: |
          pip install pre-commit
          pre-commit run --all-files

      - name: Commit formatted files
        uses: suzuki-shunsuke/commit-action@v0.0.8
        with:
          commit_message: 'style: auto-format'
          workflow: deny
          github_token: ${{ steps.app-token.outputs.token }}

      - name: Fail if pre-commit failed
        if: steps.pre-commit.conclusion == 'failure'
        run: exit 1

  update-nvim-plugins:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'nvim') ||
      contains(github.event.head_commit.message, 'plugin')

    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Check for plugin changes
        id: plugin-changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q 'config/nvim/lua/plugins'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy configs
        if: steps.plugin-changes.outputs.changed == 'true'
        run: ./scripts/deploy --tags nvim

      - uses: jdx/mise-action@v2
        if: steps.plugin-changes.outputs.changed == 'true'
        with:
          install: true

      - name: Cache Neovim plugins
        if: steps.plugin-changes.outputs.changed == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/share/nvim/lazy
            ~/.cache/nvim
          key: ${{ runner.os }}-nvim-plugins-${{ hashFiles('config/nvim/lua/plugins/**/*.lua') }}
          restore-keys: |
            ${{ runner.os }}-nvim-plugins-

      - name: Sync Neovim plugins
        if: steps.plugin-changes.outputs.changed == 'true'
        run: nvim --headless -c 'Lazy! sync' +q

      - name: Commit updated lazy-lock.json
        if: steps.plugin-changes.outputs.changed == 'true'
        uses: suzuki-shunsuke/commit-action@v0.0.8
        with:
          commit_message: 'chore: update lazy-lock.json'
          workflow: deny
          github_token: ${{ steps.app-token.outputs.token }}
          file_pattern: config/nvim/lazy-lock.json
