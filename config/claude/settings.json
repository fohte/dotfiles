{
  "includeCoAuthoredBy": true,
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "claude-notify"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "~/.claude/statusline.ts"
  },
  "permissions": {
    "allow": [
      "Bash(bun install)",
      "Bash(bun pm ls:*)",
      "Bash(bun run build:*)",
      "Bash(bun run format:*)",
      "Bash(bun run lint:*)",
      "Bash(bun run test:*)",
      "Bash(bun test:*)",
      "Bash(cat:*)",
      "Bash(cd:*)",
      "Bash(find:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh repo list:*)",
      "Bash(gh repo view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)",
      "Bash(git add:*)",
      "Bash(git commit -m:*)",
      "Bash(git commit:*)",
      "Bash(git fetch:*)",
      "Bash(git log:*)",
      "Bash(git merge origin/master:*)",
      "Bash(git mv:*)",
      "Bash(git push:*)",
      "Bash(git rev-parse:*)",
      "Bash(git rm:*)",
      "Bash(git show:*)",
      "Bash(git show:*)",
      "Bash(git status:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(npm install)",
      "Bash(npm run build:*)",
      "Bash(npm run format:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run test:*)",
      "Bash(npm test:*)",
      "Bash(npm view:*)",
      "Bash(pnpm run lint:*)",
      "Bash(pnpm run test:*)",
      "Bash(rg:*)",
      "Bash(task:*)",
      "Bash(terraform fmt)",
      "Bash(terraform fmt:*)",
      "Bash(touch:*)",
      "Read(~/.claude/CLAUDE.md)",
      "Read(~/.local/share/nvim/lazy)",
      "Read(~/Dropbox)",
      "Read(~/Library/CloudStorage/Dropbox)",
      "Read(~/ghq/**)",
      "WebFetch",
      "WebSearch",
      "mcp__container-use__environment_add_service",
      "mcp__container-use__environment_checkpoint",
      "mcp__container-use__environment_create",
      "mcp__container-use__environment_file_delete",
      "mcp__container-use__environment_file_edit",
      "mcp__container-use__environment_file_list",
      "mcp__container-use__environment_file_read",
      "mcp__container-use__environment_file_write",
      "mcp__container-use__environment_open",
      "mcp__container-use__environment_run_cmd",
      "mcp__container-use__environment_update",
      "mcp__context7__get-library-docs",
      "mcp__context7__resolve-library-id",
      "mcp__sequential-thinking__sequentialthinking"
    ],
    "deny": [
      "Bash(git commit --amend:*)",
      "Bash(git push --force-with-lease:*)",
      "Bash(git push --force:*)",
      "Bash(git push -f:*)"
    ]
  }
}
