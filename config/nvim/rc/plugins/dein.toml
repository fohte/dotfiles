# a dark powered Vim/Neovim plugin manager
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_post_update = '''
  TSUpdate
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_source = 'call util#source_plugin_config("nerdtree.rc.vim")'

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

# a great asynchronous execution library for Vim
[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]]
repo = '/usr/local/opt/fzf'
if = 'isdirectory("/usr/local/opt/fzf")'

[[plugins]]
repo = '~/.fzf'
if = 'isdirectory(expand("~/.fzf"))'

[[plugins]]
repo = 'kaicataldo/material.vim'
hook_source = '''
  let g:material_theme_style = 'dark'
'''

# light and configurable statusline/tabline
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_source = 'call util#source_plugin_config("lightline.rc.vim")'

[[plugins]]
repo = 'SirVer/ultisnips'
hook_source = '''
  let g:UltiSnipsUsePythonVersion = 3

  let g:UltiSnipsSnippetDirectories = [$HOME . '/.config/nvim/ultisnips']

  let g:UltiSnipsExpandTrigger = '<C-t>'
  let g:UltiSnipsJumpForwardTrigger = '<TAB>'
  let g:UltiSnipsJumpBackwardTrigger = '<S-TAB>'

  let g:UltiSnipsEditSplit = 'vertical'
'''

# auto close parentheses
[[plugins]]
repo = 'cohama/lexima.vim'
hook_source = '''
  let g:lexima_enable_basic_rules = 1
'''

# improve git commit buffer
[[plugins]]
repo = 'rhysd/committia.vim'
on_ft = 'gitcommit'
hook_add = '''
  let g:committia_hooks = {}
  function! g:committia_hooks.edit_open(info)
    " If no commit message, start with insert mode
    if a:info.vcs ==# 'git' && getline(1) ==# ''
      startinsert
    end
  endfunction
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'w0rp/ale'
hook_source = 'call util#source_plugin_config("ale.rc.vim")'

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_source = '''
  let g:switch_mapping = '_'

  let g:switch_custom_definitions =
  \ [
  \   { '\v^( *- *)\[x\](.*)$': '\1[ ]\2' },
  \   { '\v^( *- *)\[ \](.*)$': '\1[x]\2' },
  \ ]
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_source = '''
  let g:EditorConfig_exclude_patterns = ['\.git/.*\.diff']
'''

[[plugins]]
repo = 'nixprime/cpsm'
build = 'PY3=ON sh install.sh'

[[plugins]]
repo = 'thinca/vim-themis'

[[plugins]]
repo = 'szw/vim-tags'
hook_add = '''
  augroup MyVimTagsSettings
    autocmd!
    autocmd BufWritePre,BufRead * TagsGenerate
  augroup END
'''

[[plugins]]
repo = 'https://github.com/brooth/far.vim'

[[plugins]]
repo = 'haya14busa/vim-edgemotion'

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'haya14busa/vim-asterisk'
hook_add = '''
  map * <Plug>(asterisk-z*)
  map # <Plug>(asterisk-z#)
  map g* <Plug>(asterisk-gz*)
  map g# <Plug>(asterisk-gz#)
  let g:asterisk#keeppos = 1
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'xolox/vim-session'
depends = 'xolox/vim-misc'
hook_source = '''
  let g:session_autosave = 'yes'
  let g:session_autoload = 'yes'
  let g:session_directory = xolox#misc#path#merge(getcwd(), '.vimsessions')
'''

[[plugins]]
repo = 'xolox/vim-misc'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = 'call util#source_plugin_config("coc.rc.vim")'

[[plugins]]
repo = 'knsh14/vim-github-link'

[[plugins]]
repo = 'mattn/emmet-vim'
hook_source = '''
  let g:user_emmet_leader_key = '<C-e>'
  let g:user_emmet_settings = {
  \ 'javascript': {
  \   'extends': 'jsx',
  \ },
  \}
'''

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'sh -c "cd app && yarn install"'

[[plugins]]
repo = 'github/copilot.vim'
