#!/usr/bin/env bash

cd "$(dirname "$0")/.."

source scripts/utils.bash

usage() {
	cat <<EOS
USAGE: $0 [options...]

OPTIONS
    --help, -h       print help
    --debug, -d      set -x
    --dry-run, -n    show the commands to create symlinks
    --force, -f      even if symlink files already exist, re-deploy symlinks
    --tags, -t       deploy only the specified comma-separated tags (e.g. nvim,git)
EOS
}

log-exec() {
	if is_dryrun; then
		printf '[dryrun] '
	else
		printf '[run] '
	fi
	echo "$@"

	if ! is_dryrun; then
		"$@"
	fi
}

is_dryrun() {
	test -n "$DRYRUN"
}

is_force() {
	test -n "$FORCE"
}

while [ $# -gt 0 ]; do
	case "$1" in
	--help | -h)
		usage
		exit
		;;

	--debug | -d)
		set -x
		shift
		;;

	--dry-run | -n)
		DRYRUN=1
		shift
		;;

	--force | -f)
		FORCE=1
		shift
		;;

	--tags | -t)
		tags="$(tr ',' '\n' <<<"$2")"
		shift 2
		;;

	-*)
		echo "[ERROR] Invalid option '$1'"
		usage
		exit 1
		;;
	esac
done

function is_absolute_path {
	if [[ $1 == /* ]]; then
		echo "true"
	else
		echo "false"
	fi
}

# define a symbolink link
# usage: sym <src> <dest>
sym() {
	src="$1"
	if [[ "$src" != /* ]]; then
		src="$PWD/$src"
	fi

	dst="$2"
	dst_dir="$(dirname "$dst")"

	if [ ! -d "$dst_dir" ]; then
		log-exec mkdir -p "$dst_dir"
	fi

	if is_force || [ ! -e "$dst" ]; then
		if [ -d "$dst" ]; then
			log-exec rm -r "$dst"
		fi
		log-exec ln -sfnv "$src" "$dst"
	fi
}

# check tag matching
# usage: match_tag <tag>
match_tag() {
	tag="$1"

	# if the --tags option is not set, all tags are assumed to be specified
	if [ -z "${tags:-}" ]; then
		return 0
	fi

	grep -q -F "$tag" <<<"$tags"
}

source symlinks
